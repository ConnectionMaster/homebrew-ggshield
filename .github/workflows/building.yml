name: Building

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems

      - name: Install JQ Dep
        run: brew install jq

      - name: Install Tap
        run: brew tap gitguardian/ggshield

      - name: Lint Formulae
        run: brew audit --strict ggshield

      - name: Build Bottle
        run: brew bottle --json ggshield

      - name: Get Bottle Name
        id: bottle_name
        run: echo "::set-output name=filename::$(cat *.bottle.json | jq '.[].bottle.tags[].local_filename'  | tr -d '"')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.bottle_name.outputs.filename }}
          asset_name: ${{ steps.bottle_name.outputs.filename }}
          asset_content_type: application/zi
